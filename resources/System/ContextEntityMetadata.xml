<?xml version="1.0" encoding="utf-8"?>
<MethodSet name="EditingPattern" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="Metadata.xsd">	
	<!-- ENTITY.SEGMENT -->
	<Method name="CreateSegment" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.CreateSegment">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<ConditionSet testValue="segmentDO" Fail="NotEmpty">
			<DtsQuerySelector saveDO="segmentDO">
				<DomainObjectSelector saveDO="startDO" value="entityDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment'/'domain://ubmatrix.com/Xbrl/Instance#Segment'"/>
			</DtsQuerySelector>
			<Failure>			
				<CreateMemo doUri="memo://ubmatrix.com/Edit/#EntityAlreadyHasSegment">
					<DomainObjectSelector saveDO="particle1" value="entityDO"/>
					<DomainObjectSelector saveDO="particle2" value="segmentDO"/>
				</CreateMemo>	
			</Failure>			
		</ConditionSet>
		<CreateDomainObject saveDO="segmentDO" doUri="domain://ubmatrix.com/Xbrl/Instance#Segment">
			<ConstantSelector saveDO="schemaDO" value="&amp;http://www.xbrl.org/2003/instance#context#entity#segment"/>
		</CreateDomainObject>
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment">
			<DomainObjectSelector saveDO="From" value="entityDO"/>
			<DomainObjectSelector saveDO="To" value="segmentDO"/>
		</CreateRelationship>
		<Return>
 			<DomainObjectSelector saveDO="segmentDO" value="segmentDO"/>
		</Return>
	</Method>
	<Method name="SetSegment" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.SetSegment">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="segmentDO" value="0" type="DomainObject" allowNull="False"/> 
		<RunMethod name="RemoveSegment">
			<ConstantSelector saveDO="methodName" value="RemoveSegment"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="entityDO"/>
		</RunMethod>
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment">
			<DomainObjectSelector saveDO="From" value="entityDO"/>
			<DomainObjectSelector saveDO="To" value="segmentDO"/>
		</CreateRelationship>
	</Method>	
	<Method name="RemoveSegment" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.RemoveSegment">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<DtsQuerySelector saveDO="segmentDO">
			<DomainObjectSelector saveDO="startDO" value="entityDO"/>
			<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment'/'domain://ubmatrix.com/Xbrl/Instance#Segment'"/>
		</DtsQuerySelector>
		<ConditionSet testValue="segmentDescendantSet" Fail="NotEmpty">
			<DtsQuerySelector saveDO="segmentDescendantSet">
				<DomainObjectSelector saveDO="startDO" value="segmentDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant'/'domain://ubmatrix.com/Xbrl/Instance#SegmentDescendant'"/>
			</DtsQuerySelector>
			<Failure>
				<RunMethod name="RemoveSegmentDescendant">
					<ConstantSelector saveDO="methodName" value="RemoveSegmentDescendant"/>
					<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDO"/>
					<DomainObjectSelector saveDO="methodArg0" value="segmentDescendantSet"/>
				</RunMethod>
			</Failure>
		</ConditionSet>
		<!-- The order of this removedomainobject and conditionset is important, because we check for EntitySpecifiesSegment in the above conditionSet
		-->
		<RemoveDomainObject>
			<!-- get entityDO <-> segmentDO
			-->
			<DtsQuerySelector saveDO="RemoveDomainObject">
				<DomainObjectSelector saveDO="startDO" value="entityDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment'"/>
			</DtsQuerySelector>
		</RemoveDomainObject>
		<RemoveDomainObject>
			<DomainObjectSelector saveDO="RemoveDomainObject" value="segmentDO"/>
		</RemoveDomainObject>
	</Method>
	<Method name="DisconnectSegment" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.DisconnectSegment">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<RemoveDomainObject>
			<!-- get entityDO <-> segmentDO
			-->
			<DtsQuerySelector saveDO="RemoveDomainObject">
				<DomainObjectSelector saveDO="startDO" value="entityDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment'"/>
			</DtsQuerySelector>
		</RemoveDomainObject>
	</Method>


<!-- LENLOC SEGMENT.EXPLICITMEMBER-->
	<Method name="CreateExplicitMember" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Segment.CreateExplicitMember">
		<DomainObjectArgumentSelector name="segmentDO" value="." type="DomainObject" allowNull="False" /> 
		<DomainObjectArgumentSelector name="explicitMemberDimensionValue" value="0" type="String"  allowNull="False"/>
		<DomainObjectArgumentSelector name="explicitMemberValue" value="1" type="String" allowNull="False" />

		<CreateDomainObject saveDO="explicitMemberDO" doUri="domain://ubmatrix.com/Xbrl/Instance#ExplicitMember">
			<ConstantSelector saveDO="schemaDO" value="&amp;http://xbrl.org/2006/xbrldi#explicitMember"/>
			<DomainObjectSelector saveDO="value" value="explicitMemberValue"/>
		</CreateDomainObject>
		
		<RunMethod name="SetDimensionAttribute">
			<ConstantSelector saveDO="methodName" value="SetAttributeValue"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="explicitMemberDO"/>
			<ConstantSelector saveDO="methodArg0" value=""/>
			<ConstantSelector saveDO="methodArg1" value="dimension"/>
			<DomainObjectSelector saveDO="methodArg2" value="explicitMemberDimensionValue"/>
		</RunMethod>

		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentSpecifiesExplicitMember">
			<DomainObjectSelector saveDO="From" value="segmentDO"/>
			<DomainObjectSelector saveDO="To" value="explicitMemberDO"/>
		</CreateRelationship>
		
		<Return>
			<DomainObjectSelector saveDO="explicitMemberDO" value="explicitMemberDO"/>
		</Return>
	</Method>

	<Method name="SetSegmentExplicitMember" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.SetSegmentExplicitMember">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="explicitMemberDimensionValue" value="1" type="String" allowNull="True"/>		
		<DomainObjectArgumentSelector name="explicitMemberValue" value="2" type="String" allowNull="True"/> 

		<RunMethod name="CreateSegment" saveDO="segmentDO">	<!-- create segment; removes existing one first -->
			<ConstantSelector saveDO="methodName" value="CreateSegment"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="entityDO"/>
		</RunMethod>

		<RunMethod name="CreateExplicitMember" saveDO="explicitMemberDO">
			<ConstantSelector saveDO="methodName" value="CreateExplicitMember"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDO"/>
			<DomainObjectSelector saveDO="methodArg0" value="explicitMemberDimensionValue"/>
			<DomainObjectSelector saveDO="methodArg1" value="explicitMemberValue"/>
		</RunMethod>
	</Method>	
<!-- LENLOC -->
<!-- LENLOC SEGMENT.TYPEDMEMBER-->

	<Method name="SetTypedMemberNode" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#TypedMember.SetTypedMemberNode">
	
		<DomainObjectArgumentSelector name="typedMemberDO" type="DomainObject" value="."  allowNull="False"/> 
		<DomainObjectArgumentSelector name="typedMemberNode" type="DomainObject" value="0" allowNull="False"/> 
		<DomainObjectArgumentSelector name="value" value="1" type="String" allowNull="False" />

		<CreateDomainObject saveDO="typedMemberNodeDO"  doUri="domain://ubmatrix.com/Xbrl/Instance#TypedMemberNode">
			<DomainObjectSelector saveDO="schemaDO" value="typedMemberNode" />
		</CreateDomainObject>
		<!-- CreateDomainObject saveDO="fact" doUri="domain://ubmatrix.com/Xbrl/Instance#GlobalItemFact">
			<DomainObjectSelector saveDO="schemaDO" value="conceptDO"/>
		</CreateDomainObject -->
		
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#TypedMemberDefinesTypedMemberNode">
			<DomainObjectSelector saveDO="From" value="typedMemberDO"/>
			<DomainObjectSelector saveDO="To" value="typedMemberNodeDO"/>
		</CreateRelationship>		
		<Return>
			<DomainObjectSelector saveDO="typedMemberDO" value="typedMemberDO"/>
		</Return>

	</Method>
	
	<Method name="CreateTypedMember" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Segment.CreateTypedMember">
		<DomainObjectArgumentSelector name="segmentDO" value="." type="DomainObject" allowNull="False" /> 
		<DomainObjectArgumentSelector name="typedMemberDimensionValue" value="0" type="String"  allowNull="False"/>
		<DomainObjectArgumentSelector name="typedMemberNode" value="1" type="DomainObject" allowNull="False" />
		<DomainObjectArgumentSelector name="typedMemberNodeValue" value="2" type="String" allowNull="False" />

		<CreateDomainObject saveDO="typedMemberDO" doUri="domain://ubmatrix.com/Xbrl/Instance#TypedMember">
			<ConstantSelector saveDO="schemaDO" value="&amp;http://xbrl.org/2006/xbrldi#typedMember"/>
		</CreateDomainObject>

		<RunMethod name="SetDimensionAttribute">
			<ConstantSelector saveDO="methodName" value="SetAttributeValue"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="typedMemberDO"/>
			<ConstantSelector saveDO="methodArg0" value=""/>
			<ConstantSelector saveDO="methodArg1" value="dimension"/>
			<DomainObjectSelector saveDO="methodArg2" value="typedMemberDimensionValue"/>
		</RunMethod>

		<RunMethod name="SetTypedMemberNode">
			<ConstantSelector saveDO="methodName" value="SetTypedMemberNode"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="typedMemberDO"/>
			<DomainObjectSelector saveDO="methodArg0" value="typedMemberNode"/>
			<DomainObjectSelector saveDO="methodArg1" value="typedMemberNodeValue"/>
		</RunMethod>

		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentSpecifiesTypedMember">
			<DomainObjectSelector saveDO="From" value="segmentDO"/>
			<DomainObjectSelector saveDO="To" value="typedMemberDO"/>
		</CreateRelationship>
		
		<Return>
			<DomainObjectSelector saveDO="typedMemberDO" value="typedMemberDO"/>
		</Return>
	</Method>

	<Method name="SetSegmentTypedMember" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.SetSegmentTypedMember">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="typedMemberDimensionValue" value="1" type="String" allowNull="True"/>		
		<DomainObjectArgumentSelector name="typedMemberNode" value="2" type="DomainObject" allowNull="True"/> 
		<DomainObjectArgumentSelector name="typedMemberNodeValue" value="3" type="String" allowNull="True"/> 

		<RunMethod name="CreateSegment" saveDO="segmentDO">
			<ConstantSelector saveDO="methodName" value="CreateSegment"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="entityDO"/>
		</RunMethod>

		<RunMethod name="CreateTypedMember" saveDO="typedMemberDO">
			<ConstantSelector saveDO="methodName" value="CreateTypedMember"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDO"/>
			<DomainObjectSelector saveDO="methodArg0" value="typedMemberDimensionValue"/>
			<DomainObjectSelector saveDO="methodArg1" value="typedMemberNode"/>
			<DomainObjectSelector saveDO="methodArg2" value="typedMemberNodeValue"/>
		</RunMethod>
	</Method>	

	<!-- ENTITY.Identifier -->
	<Method name="CreateIdentifier" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.CreateIdentifier">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="identifierSchemeValue" value="0" type="String" allowNull="True"/>
		<DomainObjectArgumentSelector name="identifierValue" value="1" type="String" allowNull="True"/>

		<RunMethod name="RemoveIdentifier">	<!-- remove any existing identifier -->
			<ConstantSelector saveDO="methodName" value="RemoveIdentifier"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="entityDO"/>
		</RunMethod>

		<CreateDomainObject saveDO="identifierDO" doUri="domain://ubmatrix.com/Xbrl/Instance#Identifier">
			<ConstantSelector saveDO="schemaDO" value="&amp;http://www.xbrl.org/2003/instance#context#entity#identifier"/>
			<DomainObjectSelector saveDO="value" value="identifierValue"/>
		</CreateDomainObject>
		
		<RunMethod name="SetSchemeAttribute">
			<ConstantSelector saveDO="methodName" value="SetAttributeValue"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="identifierDO"/>
			<ConstantSelector saveDO="methodArg0" value=""/>
			<ConstantSelector saveDO="methodArg1" value="scheme"/>
			<DomainObjectSelector saveDO="methodArg2" value="identifierSchemeValue"/>
		</RunMethod>

		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesIdentifier">
			<DomainObjectSelector saveDO="From" value="entityDO"/>
			<DomainObjectSelector saveDO="To" value="identifierDO"/>
		</CreateRelationship>
		
		<Return>
			<DomainObjectSelector saveDO="identifierDO" value="identifierDO"/>
		</Return>
	</Method>

	<Method name="SetIdentifier" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.SetIdentifier">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="identifierDO" value="0" type="DomainObject" allowNull="False"/> 
		<ConditionSet testValue="entityIdentifierDO" Fail="NotEmpty">
			<DtsQuerySelector saveDO="entityIdentifierDO">
				<DomainObjectSelector saveDO="startDO" value="entityDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesIdentifier'"/>
			</DtsQuerySelector>
			<Failure>
				<RunMethod name="RemoveIdentifier">	<!-- remove any existing identifier -->
					<ConstantSelector saveDO="methodName" value="RemoveIdentifier"/>
					<DomainObjectSelector saveDO="methodWorkingDO" value="entityDO"/>
				</RunMethod>
			</Failure>
		</ConditionSet>

		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesIdentifier">
			<DomainObjectSelector saveDO="From" value="entityDO"/>
			<DomainObjectSelector saveDO="To" value="identifierDO"/>
		</CreateRelationship>
	</Method>

	<Method name="RemoveIdentifier" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Entity.RemoveIdentifier">
		<DomainObjectArgumentSelector name="entityDO" value="." type="DomainObject" allowNull="False"/> 
		<ConditionSet testValue="identifierDO" Fail="Empty">
			<DtsQuerySelector saveDO="identifierDO">
				<DomainObjectSelector saveDO="startDO" value="entityDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesIdentifier'/'domain://ubmatrix.com/Xbrl/Instance#Identifier'"/>
			</DtsQuerySelector>
			<Success>
				<RemoveDomainObject>	<!-- remove the entity to identifier relationship -->
					<DtsQuerySelector saveDO="RemoveDomainObject">
						<DomainObjectSelector saveDO="startDO" value="entityDO"/>
						<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesIdentifier'"/>
					</DtsQuerySelector>
				</RemoveDomainObject>

				<RemoveDomainObject>	<!-- remove the identifier object -->
					<DomainObjectSelector saveDO="RemoveDomainObject" value="identifierDO"/>
				</RemoveDomainObject>
			</Success>
		</ConditionSet>
	</Method>	

	<!-- SEGMENT.SegmentDescendant -->
	<Method name="AddChild" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Segment.AddChild">
		<DomainObjectArgumentSelector name="segmentDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="segmentDescendantSchemaVOUri" value="0" type="SchemaVOUri" allowNull="False" /> 
		<!-- Get the Schema Domain Object -->
		<DtsQuerySelector saveDO="segmentDescendantSchemaDO">
			<DomainObjectSelector saveDO="startValue" value="segmentDescendantSchemaVOUri"/>
		</DtsQuerySelector>
		<CreateDomainObject saveDO="segmentdescendantDO" doUri="domain://ubmatrix.com/Xbrl/Instance#SegmentDescendant">
			<DomainObjectSelector saveDO="schemaDO" value="segmentDescendantSchemaDO"/>
		</CreateDomainObject>
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant">
			<DomainObjectSelector saveDO="From" value="segmentDO"/>
			<DomainObjectSelector saveDO="To" value="segmentdescendantDO"/>
		</CreateRelationship>
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Relationship#SchemaDefinesInstance">
			<DomainObjectSelector saveDO="From" value="segmentDescendantSchemaDO"/>
			<DomainObjectSelector saveDO="To" value="segmentdescendantDO"/>
		</CreateRelationship>
		<Return>
			<DomainObjectSelector saveDO="segmentdescendantDO" value="segmentdescendantDO"/>
		</Return>
	</Method>
	<Method name="CreateChild" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#SegmentDescendant.CreateChild">
		<DomainObjectArgumentSelector name="segmentDescendantDO" value="." type="DomainObject" allowNull="False" /> 
		<DomainObjectArgumentSelector name="segmentDescendantSchemaVOUri" value="0" type="SchemaVOUri" allowNull="False" /> 
		<!-- Get the Schema Domain Object -->
		<DtsQuerySelector saveDO="segmentDescendantSchemaDO">
			<DomainObjectSelector saveDO="startValue" value="segmentDescendantSchemaVOUri"/>
		</DtsQuerySelector>
		<CreateDomainObject saveDO="segmentDescendantDO" doUri="domain://ubmatrix.com/Xbrl/Instance#SegmentDescendant">
			<DomainObjectSelector saveDO="schemaDO" value="segmentDescendantSchemaDO"/>
		</CreateDomainObject>
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Relationship#SchemaDefinesInstance">
			<DomainObjectSelector saveDO="From" value="segmentDescendantSchemaDO"/>
			<DomainObjectSelector saveDO="To" value="segmentDescendantDO"/>
		</CreateRelationship>
		<Return>
			<DomainObjectSelector saveDO="segmentDescendantDO" value="segmentDescendantDO"/>
		</Return>
	</Method>		
	<Method name="AddDescendant" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Segment.AddDescendant">
		<DomainObjectArgumentSelector name="segmentDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="segmentDescendantSchemaVOUri" value="0" type="SchemaVOUri" allowNull="False" /> 
		<DomainObjectArgumentSelector name="parentDO" value="1" type="DomainObject" allowNull="False" /> 
		<ConditionSet testValue="segmentDescedantSegmentDO" Fail="Empty">
			<DtsQuerySelector saveDO="segmentDescedantSegmentDO">
				<DomainObjectSelector saveDO="startDO" value="parentDO"/>
				<ConstantSelector value="/-'relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant'"/>
			</DtsQuerySelector>
			<Failure>
				<CreateMemo doUri="memo://ubmatrix.com/Edit/Instance/#NotClassifiedAsSegmentDescendant">
					<DomainObjectSelector saveDO="particle1" value="parentDO"/>
				</CreateMemo>	
			</Failure>
		</ConditionSet>
		<RunMethod name="AddChild" saveDO="segmentDescendantDO">
			<ConstantSelector saveDO="methodName" value="CreateChild"/>
			<DomainObjectSelector saveDO="methodWorkingDO" value="parentDO"/>
			<DomainObjectSelector saveDO="methodArg0" value="segmentDescendantSchemaVOUri"/>
		</RunMethod>
		<CreateRelationship doUri="relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant">
			<DomainObjectSelector saveDO="From" value="segmentDO"/>
			<DomainObjectSelector saveDO="To" value="segmentDescendantDO"/>
		</CreateRelationship>
		<Return>
			<DomainObjectSelector saveDO="segmentDescendantDO" value="segmentDescendantDO"/>
		</Return>
	</Method>	
	
	<Method name="RemoveSegmentDescendant" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Segment.RemoveSegmentDescendant">
		<DomainObjectArgumentSelector name="segmentDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="segmentDescendantDO" value="0" type="DomainObject" allowNull="False"/> 		
		<ConditionSet testValue="segmentDescendantChildrenSet" Fail="NotEmpty">
			<!-- Given a segmentDescendantDO, first try to get the segmentDescendantVO, then fetch all the descendants (children and grand-children etc) for this VO, return the list of descendants as set of DOs		
			-->		
			<RunMethod name="ReverseChildrenLookup" saveDO="segmentDescendantChildrenSet">
				<ConstantSelector saveDO="methodName" value="ReverseChildrenLookup"/>
				<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDescendantDO"/>
			</RunMethod>
			<Failure>
				<RunMethod name="RemoveSegmentDescendant">
					<ConstantSelector saveDO="methodName" value="RemoveSegmentDescendant"/>
					<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDO"/>
					<DomainObjectSelector saveDO="methodArg0" value="segmentDescendantChildrenSet"/>
				</RunMethod>
			</Failure>
		</ConditionSet>

		<ConditionSet testValue="segmentDescendantParentDO" Fail="NotEmpty">
			<RunMethod name="ReverseParentLookup" saveDO="segmentDescendantParentDO">
				<ConstantSelector saveDO="methodName" value="ReverseParentLookup"/>
				<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDescendantDO"/>
			</RunMethod>
			<Failure>
				<!-- Remove the segmentDescendant domain object
				-->	
				<ConditionSet testValue="segmentDescendantParent" Fail="NotEmpty">
				<!-- test
					<DtsQuerySelector saveDO="segmentDescendantParent">
						<DomainObjectSelector saveDO="startDO" value="segmentDO"/>
						<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant'"/>
						<DomainObjectSelector saveDO="toEndDO" value="segmentDescendantParentDO"/>
					</DtsQuerySelector>			
				-->	
					<DtsQuerySelector saveDO="segmentDescendantParent">
						<DomainObjectSelector saveDO="startDO" value="segmentDescendantParentDO"/>
						<ConstantSelector value="/-'relationship://ubmatrix.com/Xbrl/Instance/Relationship#EntitySpecifiesSegment'"/>
					</DtsQuerySelector>			
					<Failure>
						<!-- Remove the SegmentHasDescendant relationship on the segmentDescendantDO
						-->		
						<RemoveDomainObject>
							<!-- get segmentDO <-> segmentdescendantDO
							-->
							<DtsQuerySelector saveDO="RemoveDomainObject">
								<DomainObjectSelector saveDO="startDO" value="segmentDO"/>
								<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant'"/>
								<DomainObjectSelector saveDO="toEndDO" value="segmentDescendantDO"/>
							</DtsQuerySelector>
						</RemoveDomainObject>

						<!-- Remove the SchemaDefinesInstance relationship on the segmentDescendantDO
						-->		
						<RemoveDomainObject>
							<DtsQuerySelector saveDO="RemoveDomainObject">
								<DomainObjectSelector saveDO="startDO" value="segmentDescendantDO"/>
								<ConstantSelector value="/-'relationship://ubmatrix.com/Xbrl/Relationship#SchemaDefinesInstance'"/>
							</DtsQuerySelector>
						</RemoveDomainObject>
						<RemoveDomainObject>
							<DomainObjectSelector saveDO="RemoveDomainObject" value="segmentDescendantDO"/>
						</RemoveDomainObject>
					</Failure>
					<Success>
						<!-- Remove the SegmentHasDescendant relationship on the segmentDescendantDO
						-->		
						<RemoveDomainObject>
							<!-- get segmentDO <-> segmentdescendantDO
							-->
							<DtsQuerySelector saveDO="RemoveDomainObject">
								<DomainObjectSelector saveDO="startDO" value="segmentDO"/>
								<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant'"/>
								<DomainObjectSelector saveDO="toEndDO" value="segmentDescendantDO"/>
							</DtsQuerySelector>
						</RemoveDomainObject>

						<RunMethod name="RemoveChild">
							<ConstantSelector saveDO="methodName" value="RemoveChild"/>
							<DomainObjectSelector saveDO="methodWorkingDO" value="segmentDescendantParentDO"/>
							<DomainObjectSelector saveDO="methodArg0" value="segmentDescendantDO"/>
						</RunMethod>
					</Success>
				</ConditionSet>
			</Failure>
		</ConditionSet>
	</Method>

	<Method name="DisconnectSegmentDescendant" behaviorUri="behavior://ubmatrix.com/Xbrl/Instance#Segment.DisconnectSegmentDescendant">
		<DomainObjectArgumentSelector name="segmentDO" value="." type="DomainObject" allowNull="False"/> 
		<DomainObjectArgumentSelector name="segmentDescendantDO" value="0" type="DomainObject" allowNull="False"/> 		
		<RemoveDomainObject>
			<!-- get segmentDO <-> segmentdescendantDO
			-->
			<DtsQuerySelector saveDO="RemoveDomainObject">
				<DomainObjectSelector saveDO="startDO" value="segmentDO"/>
				<ConstantSelector value="/+'relationship://ubmatrix.com/Xbrl/Instance/Relationship#SegmentHasDescendant'"/>
				<DomainObjectSelector saveDO="toEndDO" value="segmentDescendantDO"/>
			</DtsQuerySelector>
		</RemoveDomainObject>
	</Method>
	

	
</MethodSet>

<!--
 The contents of this file are subject to the UBmatrix License Version 1.0 (the "License");
 you may not use this file except in compliance with the License. You may obtain a copy of the
 License at http://www.ubmatrix.com/prospect/eula_processor.asp

 Software distributed under the License is distributed on an "AS IS" basis,
 WITHOUT WARRANTY OF ANY KIND, either express or implied.
 See the License for the specific language governing rights and limitations under the License.

 Copyright (c) UBmatrix, Inc., 2005-2006.  All Rights Reserved.
-->
